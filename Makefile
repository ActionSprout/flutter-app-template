.DEFAULT_GOAL := all
.PHONY: all develop format help lint test watch

# Proto-generated files and their sources #{pb_line}
SRC_PROTO_FILES=$(wildcard #{pb_source}/*.proto)
PROTO_FILES=$(patsubst #{pb_source}/%.proto,lib/models/%.pb.dart,$(SRC_PROTO_FILES))
REQUIRED_WKT_PROTO_FILES=$(wildcard #{pb_source}/google/protobuf/*.proto)
REQUIRED_WKT_DART_FILES=$(patsubst #{pb_source}/google/protobuf/%.proto,lib/models/google/protobuf/%.pb.dart,$(REQUIRED_WKT_PROTO_FILES))
# Dart files generated by build_runner
SRC_G_FILES=$(shell rg --files-with-matches "part '"'.*'"\.g\.dart'")
G_FILES=$(patsubst %.dart,%.g.dart,$(SRC_G_FILES))
# Dart files written by developers
DART_FILES=$(shell find lib test -type f -name '*.dart' | rg -v '\.g')

#
# Phony targets
#
## Build all required files. Does NOT build an app.
all: \
	$(G_FILES) \
	$(PROTO_FILES) \#{pb_line}
	$(REQUIRED_WKT_DART_FILES) \#{pb_line}

develop: ## Build generated files, run tests, lint and format code.
	make all
	make format
	make test
	make lint

format: ## Reformats hand-authored files.
	@flutter format $(DART_FILES) > /dev/null

help: ## List available make commands.
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

lint: ## Analyze source files for potential issues.
	flutter analyze lib test test_driver

test: ## Run unit tests
	flutter test

watch: ## Re-run `develop` tasks as files change.
	rg --files | entr -c make develop

#
# File targets, roughly sorted by location
#
%.g.dart: %.dart
	flutter pub run build_runner build \
	 	--delete-conflicting-outputs \
		--build-filter $@
	# Pub may not actually update the modified time of the file.
	touch $@
#{pb_line}
lib/models/%.pb.dart: #{pb_source}/%.proto
	mkdir -p $(@D)#{pb_line}
	protoc --dart_out=$(@D) --proto_path=$(<D) $<#{pb_line}
