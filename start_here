#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

project_root=$(dirname "${BASH_SOURCE[@]}")

read -r -p "Project Name: " project_name
read -r -p "Bundle Prefix (e.g. com.example): " project_prefix
read -r -p "Description (optional): " project_description
read -re -p ".proto directory (optional): " protobuf_source

rm -rf "$project_root/android/app/src/main/kotlin/com/example"
mv pubspec.yaml template.pubspec.yaml

flutter create --project-name "$project_name" \
  --org "$project_prefix" \
  --description "$project_description" \
  --no-pub --overwrite --suppress-analytics \
  "$project_root"

sed -i '' "s/#{name}/$project_name/" template.pubspec.yaml
sed -i '' "s/#{description}/$project_description/" template.pubspec.yaml
mv template.pubspec.yaml pubspec.yaml

for file in $(rg --files-with-matches "#\\{pb_line}"); do
  if [[ -n "$protobuf_source" ]]; then
    sed -i '' "s,#{pb_line},," "$file"
    sed -i '' "s,#{pb_source},$protobuf_source," "$file"
  else
    sed -i '' "s,.*#{pb_.*,," "$file"
  fi
done

mkdir -p assets lib/screens lib/components lib/gen lib/state test_driver

git checkout lib/main.dart
rm test/widget_test.dart
rmdir test

flutter --suppress-analytics pub get

git remote add upstream git@github.com:ActionSprout/flutter-app-template.git
git lfs install
git lfs track "*.gif" "*.jpg" "*.png" "*.ttf"
git add "$project_root"

cat <<EOF
To finish setting up, review the changes the start_here script has made
(git diff --cached), and update source control.

The project template has been added as the "upstream" git remote. To update
this project in the future, pull the latest and merge as necessary (git pull upstream master).
EOF
